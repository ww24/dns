box: debian:8

build:
  steps:
    - install-packages:
      packages: curl unzip

    - script:
      name: install terraform
      code: |
        mkdir -p $HOME/terraform
        export TERRAFORM_VERSION=0.7.13
        export PATH=$PATH:$HOME/terraform
        cd $HOME/terraform
        curl -sLO https://releases.hashicorp.com/terraform/0.7.13/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip

    - script:
      name: set working directory
      code: |
        export WERCKER_SOURCE_DIR=$WERCKER_SOURCE_DIR/terraform
        echo "WERCKER_SOURCE_DIR=$WERCKER_SOURCE_DIR"

    - script:
      name: generate account.json
      code: |
        ./account.json.template.sh > account.json

    - script:
      name: terraform plan
      code: |
        terraform plan -var-file=variables.tfvars

deploy:
  steps:
    - install-packages:
      packages: curl unzip

    - script:
      name: install terraform
      code: |
        mkdir -p $HOME/terraform
        export TERRAFORM_VERSION=0.7.13
        export PATH=$PATH:$HOME/terraform
        cd $HOME/terraform
        curl -sLO https://releases.hashicorp.com/terraform/0.7.13/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip

    - script:
      name: set working directory
      code: |
        export WERCKER_SOURCE_DIR=$WERCKER_SOURCE_DIR/terraform
        echo "WERCKER_SOURCE_DIR=$WERCKER_SOURCE_DIR"

    - script:
      name: terraform apply
      code: |
        terraform apply -var-file=variables.tfvars
